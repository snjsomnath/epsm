# Docker Compose Configuration with Version Support
#
# This file supports building and running EPSM with version tags.
# 
# Usage:
#   For development: docker-compose up
#   For specific version: VERSION=0.1.0 docker-compose up
#   For production: Use docker-compose.prod.yml

services:
  # PostgreSQL Database
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: epsm_database_${ENVIRONMENT:-dev}
    image: epsm/database:${VERSION:-latest}
    environment:
      POSTGRES_DB: epsm_db
      POSTGRES_USER: epsm_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-epsm_secure_password}
      POSTGRES_MULTIPLE_DATABASES: epsm_db,epsm_materials
    volumes:
      - postgres_data_${ENVIRONMENT:-dev}:/var/lib/postgresql/data
      - ./database/exports:/docker-entrypoint-initdb.d/exports:ro
      - ./database/migrations:/docker-entrypoint-initdb.d/migrations:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - epsm_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U epsm_user -d epsm_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "database"

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: epsm_redis_${ENVIRONMENT:-dev}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - epsm_network
    volumes:
      - redis_data_${ENVIRONMENT:-dev}:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "redis"

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: ${BACKEND_DOCKERFILE:-Dockerfile.dev}
      args:
        VERSION: ${VERSION:-dev}
    container_name: epsm_backend_${ENVIRONMENT:-dev}
    image: epsm/backend:${VERSION:-latest}
    environment:
      DEBUG: "${DEBUG:-True}"
      VERSION: "${VERSION:-dev}"
      DB_NAME: epsm_db
      DB_USER: epsm_user
      DB_PASSWORD: ${DB_PASSWORD:-epsm_secure_password}
      DB_HOST: database
      DB_PORT: "5432"
      MATERIALS_DB_NAME: epsm_materials
      MATERIALS_DB_USER: epsm_user
      MATERIALS_DB_PASSWORD: ${DB_PASSWORD:-epsm_secure_password}
      MATERIALS_DB_HOST: database
      MATERIALS_DB_PORT: "5432"
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-secret-key-change-in-production}
      ENERGYPLUS_DOCKER_IMAGE: nrel/energyplus:23.2.0
      SIMULATION_TIMEOUT: "600"
      CORS_ALLOWED_ORIGINS: "http://localhost:5173,http://frontend:5173"
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./backend:/app
      - simulation_files_${ENVIRONMENT:-dev}:/app/media/simulation_files
      - simulation_results_${ENVIRONMENT:-dev}:/app/media/simulation_results
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - epsm_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             daphne -b 0.0.0.0 -p 8000 config.asgi:application"
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "backend"

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: ${BACKEND_DOCKERFILE:-Dockerfile.dev}
      args:
        VERSION: ${VERSION:-dev}
    container_name: epsm_celery_worker_${ENVIRONMENT:-dev}
    image: epsm/backend:${VERSION:-latest}
    environment:
      DEBUG: "${DEBUG:-True}"
      VERSION: "${VERSION:-dev}"
      DB_NAME: epsm_db
      DB_USER: epsm_user
      DB_PASSWORD: ${DB_PASSWORD:-epsm_secure_password}
      DB_HOST: database
      DB_PORT: "5432"
      MATERIALS_DB_NAME: epsm_materials
      MATERIALS_DB_USER: epsm_user
      MATERIALS_DB_PASSWORD: ${DB_PASSWORD:-epsm_secure_password}
      MATERIALS_DB_HOST: database
      MATERIALS_DB_PORT: "5432"
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-secret-key-change-in-production}
      ENERGYPLUS_DOCKER_IMAGE: nrel/energyplus:23.2.0
      SIMULATION_TIMEOUT: "600"
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./backend:/app
      - simulation_files_${ENVIRONMENT:-dev}:/app/media/simulation_files
      - simulation_results_${ENVIRONMENT:-dev}:/app/media/simulation_results
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - epsm_network
    command: celery -A config worker --loglevel=info --concurrency=4
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "celery-worker"

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: ${BACKEND_DOCKERFILE:-Dockerfile.dev}
      args:
        VERSION: ${VERSION:-dev}
    container_name: epsm_celery_beat_${ENVIRONMENT:-dev}
    image: epsm/backend:${VERSION:-latest}
    environment:
      DEBUG: "${DEBUG:-True}"
      VERSION: "${VERSION:-dev}"
      DB_NAME: epsm_db
      DB_USER: epsm_user
      DB_PASSWORD: ${DB_PASSWORD:-epsm_secure_password}
      DB_HOST: database
      DB_PORT: "5432"
      MATERIALS_DB_NAME: epsm_materials
      MATERIALS_DB_USER: epsm_user
      MATERIALS_DB_PASSWORD: ${DB_PASSWORD:-epsm_secure_password}
      MATERIALS_DB_HOST: database
      MATERIALS_DB_PORT: "5432"
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-secret-key-change-in-production}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./backend:/app
      - celery_beat_${ENVIRONMENT:-dev}:/app/celerybeat-schedule
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - epsm_network
    command: celery -A config beat --loglevel=info
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "celery-beat"

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: ${FRONTEND_DOCKERFILE:-Dockerfile}
      args:
        VERSION: ${VERSION:-dev}
        VITE_API_URL: ${VITE_API_URL:-http://localhost:8000}
    container_name: epsm_frontend_${ENVIRONMENT:-dev}
    image: epsm/frontend:${VERSION:-latest}
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8000}
      VERSION: "${VERSION:-dev}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - frontend_dist_${ENVIRONMENT:-dev}:/app/dist
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    depends_on:
      - backend
    networks:
      - epsm_network
    command: npm run dev -- --host 0.0.0.0
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "frontend"

networks:
  epsm_network:
    driver: bridge
    labels:
      com.epsm.version: "${VERSION:-dev}"

volumes:
  postgres_data_dev:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "database"
  postgres_data_prod:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "database"
  redis_data_dev:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "redis"
  redis_data_prod:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "redis"
  simulation_files_dev:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "backend"
  simulation_files_prod:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "backend"
  simulation_results_dev:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "backend"
  simulation_results_prod:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "backend"
  celery_beat_dev:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "celery"
  celery_beat_prod:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "celery"
  frontend_dist_dev:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "frontend"
  frontend_dist_prod:
    labels:
      com.epsm.version: "${VERSION:-dev}"
      com.epsm.component: "frontend"
