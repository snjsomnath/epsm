# Generated by Django 3.2.25 on 2025-09-21 17:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('start_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('file_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'simulation_runs',
            },
        ),
        migrations.CreateModel(
            name='SimulationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_id', models.CharField(db_index=True, max_length=100)),
                ('file_name', models.CharField(max_length=255)),
                ('building_name', models.CharField(blank=True, max_length=255)),
                ('total_energy_use', models.FloatField(blank=True, null=True)),
                ('heating_demand', models.FloatField(blank=True, null=True)),
                ('cooling_demand', models.FloatField(blank=True, null=True)),
                ('lighting_demand', models.FloatField(blank=True, null=True)),
                ('equipment_demand', models.FloatField(blank=True, null=True)),
                ('total_area', models.FloatField(blank=True, null=True)),
                ('run_time', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(default='success', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('raw_json', models.JSONField(blank=True, null=True)),
                ('variant_idx', models.IntegerField(blank=True, null=True)),
                ('idf_idx', models.IntegerField(blank=True, null=True)),
                ('construction_set_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('simulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='simulation.simulation')),
            ],
            options={
                'db_table': 'simulation_results',
            },
        ),
        migrations.CreateModel(
            name='SimulationZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_name', models.CharField(max_length=255)),
                ('area', models.FloatField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('simulation_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zones', to='simulation.simulationresult')),
            ],
            options={
                'db_table': 'simulation_zones',
            },
        ),
        migrations.CreateModel(
            name='SimulationFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_type', models.CharField(max_length=50)),
                ('file_name', models.CharField(default='unknown_file', max_length=255)),
                ('file_path', models.CharField(default='', max_length=500)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('original_name', models.CharField(blank=True, default='', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('simulation', models.ForeignKey(db_column='simulation_id', on_delete=django.db.models.deletion.CASCADE, related_name='files', to='simulation.simulation')),
            ],
            options={
                'db_table': 'simulation_files',
            },
        ),
        migrations.CreateModel(
            name='SimulationEnergyUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_use', models.CharField(max_length=100)),
                ('electricity', models.FloatField(default=0.0)),
                ('district_heating', models.FloatField(default=0.0)),
                ('total', models.FloatField(default=0.0)),
                ('simulation_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='energy_uses', to='simulation.simulationresult')),
            ],
            options={
                'db_table': 'simulation_energy_uses',
            },
        ),
        migrations.AddIndex(
            model_name='simulationresult',
            index=models.Index(fields=['simulation', 'run_id'], name='simulation__simulat_55e4dc_idx'),
        ),
        migrations.AddIndex(
            model_name='simulationresult',
            index=models.Index(fields=['variant_idx', 'idf_idx'], name='simulation__variant_707f67_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='simulationenergyuse',
            unique_together={('simulation_result', 'end_use')},
        ),
    ]
